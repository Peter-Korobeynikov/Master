<?php
 use Tygh\Http; use Tygh\Addons\SchemesManager; use Tygh\Registry; defined('BOOTSTRAP') or die('Access denied'); function sd_NmViYTc3MDE1Y2I1MTdkNjQwMzZiODYy($host) { $location = array(); $setting = Registry::get('addons.sd_geolocation'); if (!empty($setting['test_mode']) && $setting['test_mode'] == 'Y' && !empty($setting['test_ip_address'])) { $ip = $setting['test_ip_address']; } else { $ip = long2ip($host); } if (function_exists('geoip_record_by_name')) { $location = @geoip_record_by_name($ip); if ($location) { $change_data = array( 'countryCode' => 'country_code', 'countryName' => 'country', 'country_name' => 'country', 'region' => array('state_code', 'state'), 'stateCode' => 'state_code', 'postalCode' => 'zipcode', 'postal_code' => 'zipcode', 'areaCode' => 'area_code', 'dmaCode' => 'dma_code' ); foreach ($change_data as $old => $new) { sd_ZTc1ODdmNWUzZGNiMzg4NmE1MDg4NWEy($location, $old, $new); } } } if (empty($location)) { $geoip = Net_GeoIP::getInstance(Registry::get('config.dir.addons') . 'sd_geolocation/lib/GeoLiteCity.dat'); $object_location = $geoip->lookupLocation($ip); if ($object_location) { $location = array( 'country_code' => $object_location->countryCode, 'country' => $object_location->countryName, 'state_code' => $object_location->region, 'state' => $object_location->region, 'city' => $object_location->city, 'zipcode' => $object_location->postalCode, 'latitude' => $object_location->latitude, 'longitude' => $object_location->longitude, 'area_code' => $object_location->areaCode, 'dma_code' => $object_location->dmaCode ); } } if (empty($location)) { $location = sd_M2U1NmY1OGFmZDlmNWRhZmM4M2RjMzAz(); } if (!empty($location['latitude']) || !empty($location['longitude'])) { $location = sd_YWNhOTc4YTNiZWYxYzY4NzE3MDU2ZTVm($location['latitude'], $location['longitude']); $location['search_ip'] = $ip; } return $location; } function sd_NWZmOWZiNjdkZWFiNGYyNjc3OTBhZTQ3($key = '') { if (!fn_allowed_for('MULTIVENDOR')) { $companies = db_get_array('SELECT storefront, secure_storefront FROM ?:companies'); } else { $companies = array(array('storefront' => fn_url('', 'C', 'http'))); } $addon = 'sd_geolocation'; $request = array( 'companies' => $companies, 'host' => Registry::get('config.current_host'), 'lang_code' => CART_LANGUAGE, 'addon' => $addon, 'addon_version' => fn_get_addon_version($addon), 'license' => !empty($key) ? trim($key) : Registry::get(str_rot13('nqqbaf.fq_trbybpngvba.yxrl')), ); Registry::set('log_cut', true); $response = Http::get( base64_decode('aHR0cHM6Ly93d3cuc2ltdGVjaGRldi5jb20vaW5kZXgucGhwP2Rpc3BhdGNoPWxpY2Vuc2VzLmNoZWNr'), array('request' => urlencode(json_encode($request))), array('timeout' => 3) ); if (Http::getStatus() == Http::STATUS_OK) { $response_data = json_decode($response, true); if ($response_data !== null) { $status = isset($response_data['status']) ? $response_data['status'] : 'F'; if (isset($response_data['notice'])) { fn_set_notification( isset($response_data['type']) ? $response_data['type'] : 'W', SchemesManager::getName($addon, CART_LANGUAGE), $response_data['notice'], isset($response_data['state']) ? $response_data['state'] : '' ); } } else { $status = $response; } if ($status != 'A') { fn_update_addon_status($addon, 'D', false); } } else { $status = 'A'; } return $status == 'A'; } function fn_settings_actions_addons_sd_geolocation_lkey(&$new_value, $old_value) { if (sd_NWZmOWZiNjdkZWFiNGYyNjc3OTBhZTQ3($new_value)) { $new_value = trim($new_value); } } function fn_settings_actions_addons_sd_geolocation(&$new_status, $old_status) { if ($new_status == 'A' && !sd_NWZmOWZiNjdkZWFiNGYyNjc3OTBhZTQ3()) { $new_status = 'D'; } } function fn_sd_geolocation_set_admin_notification($user_data) { if (AREA == 'A' && $user_data['is_root'] == 'Y' && $user_data['user_type'] == 'A') { sd_NWZmOWZiNjdkZWFiNGYyNjc3OTBhZTQ3(); } } function sd_ZTc1ODdmNWUzZGNiMzg4NmE1MDg4NWEy(&$location, $old, $new) { if ($location && $old && $new && isset($location[$old])) { if (is_array($new)) { foreach ($new as $name) { $location[$name] = $location[$old]; } } else { $location[$new] = $location[$old]; } unset($location[$old]); } } function sd_ZWUzNjY2ZDgxMDJhMGJlMzAyODc0OGZj() { $location = fn_get_session_data('geoip'); return ($location) ? $location : sd_M2U1NmY1OGFmZDlmNWRhZmM4M2RjMzAz(); } function sd_NmQ4OTI0MzAzMGJkZWRlZmZiNTc3YjQ5($params, $notice = true) { $type = 'N'; $change_location = true; $new_location = array(); $message = __('change_my_location'); if (isset($params['latitude']) && isset($params['longitude'])) { $new_location = sd_YWNhOTc4YTNiZWYxYzY4NzE3MDU2ZTVm($params['latitude'], $params['longitude']); } if (!empty($new_location['country_code'])) { fn_set_session_data('geoip', $new_location); } else { $type = 'E'; if (fn_is_not_empty(fn_get_session_data('geoip'))) { $change_location = false; $message = __('error_change_my_location'); } else { fn_set_session_data('geoip', sd_M2U1NmY1OGFmZDlmNWRhZmM4M2RjMzAz()); $message = __('change_my_location_default'); } } if ($notice && Registry::get('addons.sd_geolocation.show_city_confirm') !='tooltip') { fn_set_notification($type, ($type == 'E') ? __('error') : __('notice'), $message); } if ($change_location) { sd_MDgyMWY5Zjk2N2U1NzZmZWI2OGZlZDlj(Tygh::$app['session']['auth']['user_id']); } } function sd_MDgyMWY5Zjk2N2U1NzZmZWI2OGZlZDlj($user_id) { if ($user_id) { $location = sd_ZWUzNjY2ZDgxMDJhMGJlMzAyODc0OGZj(); if (isset($location['latitude']) && isset($location['longitude'])) { db_query('UPDATE ?:users SET ?u WHERE user_id = ?i', array( 'latitude' => $location['latitude'], 'longitude' => $location['longitude'] ), $user_id); } } } function sd_M2U1NmY1OGFmZDlmNWRhZmM4M2RjMzAz() { $settings = Registry::get('addons.sd_geolocation'); $country_code = (empty($settings['country_code'])) ? '' : $settings['country_code']; $state_code = (empty($settings['state_code'])) ? '' : $settings['state_code']; return array( 'country_code' => $country_code, 'country' => fn_get_country_name($country_code), 'state_code' => $state_code, 'state' => fn_get_state_name($state_code, $country_code), 'city' => (empty($settings['city'])) ? '' : $settings['city'], 'zipcode' => (empty($settings['postal_code'])) ? '' : $settings['postal_code'], 'latitude' => (empty($settings['latitude'])) ? 48.8550448 : $settings['latitude'], 'longitude' => (empty($settings['longitude'])) ? 2.3433988 : $settings['longitude'], 'area_code' => '', 'dma_code' => '', 'lang_code' => sd_ZTM4MDNmZjNlN2U4NjliNTlkMGU0NTU5(CART_LANGUAGE) ); } function sd_MzA4YjQxYmJkZjI2YjlhYWIzMzI0YWZm($location) { $name = ''; if ($location) { if (!empty($location['city'])) { $name = $location['city']; } elseif (!empty($location['state'])) { $name = $location['state']; } elseif (!empty($location['country'])) { $name = $location['country']; } } return $name; } function sd_YWNhOTc4YTNiZWYxYzY4NzE3MDU2ZTVm($lat, $lng) { $location = array(); if (!sd_MWZjMGIzMmE2Y2UyYTA4Yjk2OWIxNWRl()) { $params = sd_NjY5ZTMwZDc1YTdiMWUzNDdhNmJmOTI3(); $result = sd_MmFkMmI4OGEzMmUzZWNlNjY0ZGUyMTY2(GOOGLE_GEOCODING_URL . "json?latlng={$lat},{$lng}{$params}"); if ($result && $result->status == 'OK') { $location = array( 'country_code' => '', 'country' => '', 'state_code' => '', 'state' => '', 'city' => '', 'zipcode' => '', 'latitude' => $lat, 'longitude' => $lng, 'areaCode' => '', 'dmaCode' => '', 'lang_code' => sd_ZTM4MDNmZjNlN2U4NjliNTlkMGU0NTU5(CART_LANGUAGE) ); foreach ($result->results as $_result) { foreach ($_result->address_components as $addressPart) { if ((in_array('locality', $addressPart->types)) && (in_array('political', $addressPart->types))) { $location['city'] = $addressPart->long_name; } elseif ((in_array('administrative_area_level_1', $addressPart->types)) && (in_array('political', $addressPart->types))) { $location['state'] = $addressPart->long_name; $location['state_code'] = $addressPart->short_name; } elseif ((in_array('administrative_area_level_2', $addressPart->types)) && (in_array('political', $addressPart->types))) { $location['_state'] = $addressPart->long_name; $location['_state_code'] = $addressPart->short_name; } elseif ((in_array('country', $addressPart->types)) && (in_array('political', $addressPart->types))) { $location['country'] = $addressPart->long_name; $location['country_code'] = $addressPart->short_name; } elseif (in_array('postal_code', $addressPart->types)) { $location['zipcode'] = $addressPart->long_name; } } } if (!empty($location['country_code']) && fn_strlen($location['country_code']) > 2) { $location['country_code'] = db_get_field( 'SELECT code FROM ?:country_descriptions WHERE country = ?s', $location['country_code'] ); } if (!empty($location['country_code']) && !empty($location['state'])) { $states = db_get_fields('SELECT state_id FROM ?:states WHERE country_code = ?s', $location['country_code']); if ($states) { list($state_id, $state_name) = sd_ZmVkMWYyYmQ4ZjI2OWY4M2IwMWE3MWVk($states, $location['state'], $location['state_code']); if (empty($state_id) && !empty($location['_state'])) { list($state_id, $state_name) = sd_ZmVkMWYyYmQ4ZjI2OWY4M2IwMWE3MWVk($states, $location['_state'], $location['_state_code']); } if (empty($state_id) && !empty($location['city'])) { list($state_id, $state_name) = sd_ZmVkMWYyYmQ4ZjI2OWY4M2IwMWE3MWVk($states, $location['city']); } if ($state_id) { $location['state'] = $state_name; $location['state_code'] = db_get_field('SELECT code FROM ?:states WHERE state_id = ?i', $state_id); } if (isset($location['_state'])) { unset($location['_state']); unset($location['_state_code']); } } } if (empty($location['country_code'])) { $location = array(); } } } return $location; } function sd_MmFkMmI4OGEzMmUzZWNlNjY0ZGUyMTY2($url) { $result = false; if ($url) { $test_mode = (Registry::get('addons.sd_geolocation.test_mode') == 'Y'); $respone = Http::get($url); if ($respone) { $result = json_decode($respone, false); if ($test_mode && !empty($result->error_message)) { fn_set_notification('E', __('error'), $result->error_message); } } elseif ($test_mode) { fn_set_notification('E', __('error'), __('error_connect_google_server', array('[url]' => $url))); } } return $result; } function sd_ZTM4MDNmZjNlN2U4NjliNTlkMGU0NTU5($lang_code) { $supported_langs = array ( 'ar', 'bg', 'bn', 'ca', 'cs', 'da', 'de', 'el', 'en', 'es', 'eu', 'fa', 'fi', 'fil', 'fr' , 'gl', 'gu', 'hi', 'hr', 'hu', 'id', 'it', 'iw', 'ja', 'kn', 'ko', 'lt', 'lv', 'ml', 'mr', 'nl', 'pl', 'pt', 'ro', 'ru', 'sk', 'sl', 'sr','sv', 'ta', 'te','th', 'tl', 'tr', 'uk', 'vi', 'zh' ); if (in_array($lang_code, $supported_langs)) { return $lang_code; } return ''; } function sd_NjY5ZTMwZDc1YTdiMWUzNDdhNmJmOTI3($hover = false) { $add = '&language=' . sd_ZTM4MDNmZjNlN2U4NjliNTlkMGU0NTU5(CART_LANGUAGE); if ($hover && Registry::get('addons.sd_geolocation.use_second_key') == 'Y') { $google_key = Registry::get('addons.sd_geolocation.google_map_key'); } else { $google_key = Registry::get('addons.sd_geolocation.google_key'); } if ($google_key) { $add .= "&key={$google_key}"; } return $add; } function sd_YzE5ZWI5OWI1NDUzZmQ1Nzk0NjQ3MWI2(&$user_data) { $result = false; $location = sd_ZWUzNjY2ZDgxMDJhMGJlMzAyODc0OGZj(); $fields = array('city', 'zipcode', array('country', 'country_code'), array('state', 'state_code')); $sections = array('b', 's'); foreach ($sections as $sec) { if (empty($user_data["{$sec}_city"]) && empty($user_data["{$sec}_state"]) && empty($user_data["{$sec}_zipcode"])) { $result = true; foreach($fields as $field) { if (is_array($field)) { if (!empty($location[$field[1]]) || !empty($location[$field[0]])) { $user_data["{$sec}_{$field[0]}"] = empty($location[$field[1]]) ? $location[$field[0]] : $location[$field[1]]; } } else { $user_data["{$sec}_{$field}"] = empty($location[$field]) ? '' : $location[$field]; } } } } return $result; } function sd_ZmVkMWYyYmQ4ZjI2OWY4M2IwMWE3MWVk($state_ids, $name, $code = '') { $state_id = 0; $state = ''; if ($name && $state_ids) { $condition = (count($state_ids) == 1) ? db_quote('AND state_id = ?i', reset($state_ids)) : db_quote('AND state_id IN (?n)', $state_ids); if ($code) { $state_id = db_get_field('SELECT state_id FROM ?:states WHERE code = ?s ?p', $code, $condition); } if (empty($state_id)) { $state_condition = db_quote('state LIKE ?l', "{$name}%"); $ar_state = explode(' ', $name); if (count($ar_state) > 1) { $ar_st_con = array(); foreach($ar_state as $word) { $ar_st_con[] = db_quote('state LIKE BINARY ?l', "%{$word}%"); } $state_condition = '(' . $state_condition . ' OR (' . implode(' AND ', $ar_st_con) . '))'; } $state_id = db_get_field('SELECT state_id FROM ?:state_descriptions WHERE ?p ?p', $state_condition, $condition); } if ($state_id) { $state = $name; } } return array($state_id, $state); } function sd_YTRhZmM1MDgzNmVmYzhlY2QyMjlkYTVh($google_api_key) { $markers = Registry::get('addons.sd_geolocation.latitude') . ',' . Registry::get('addons.sd_geolocation.longitude'); $url = GOOGLE_STATICMAP_URL . '?zoom=13&size=600x300&markers' . $markers . '&key=' . $google_api_key; $extra = array( 'headers' => array( "Content-Type: image/jpg" ) ); $response = Http::get($url, $extra); return !(strpos($response, 'The provided API key is invalid')); } function fn_sd_geolocation_before_dispatch($controller, $mode, $action, $dispatch_extra, $area) { if(!sd_MWZjMGIzMmE2Y2UyYTA4Yjk2OWIxNWRl() && $area == 'C') { $geo_ip = fn_get_session_data('geoip'); if (fn_is_empty($geo_ip)) { $_ip = fn_get_ip(true); fn_set_session_data('geoip', sd_NmViYTc3MDE1Y2I1MTdkNjQwMzZiODYy($_ip['host'])); fn_define('SEARCH_GEO_JS', true); } else { if (isset($geo_ip['lang_code']) && $geo_ip['lang_code'] != sd_ZTM4MDNmZjNlN2U4NjliNTlkMGU0NTU5(CART_LANGUAGE)) { sd_NmQ4OTI0MzAzMGJkZWRlZmZiNTc3YjQ5(array( 'latitude' => empty($geo_ip['latitude']) ? 0 : $geo_ip['latitude'], 'longitude' => empty($geo_ip['longitude']) ? 0 : $geo_ip['longitude'] ), false); } fn_define('SEARCH_GEO_JS', (empty($_REQUEST['geo_js'])) ? false : true); } } } function fn_sd_geolocation_get_user_info($user_id, $get_profile, $profile_id, &$user_data) { if (AREA == 'C') { $runtime = Registry::get('runtime'); if (!empty($runtime['controller']) && $runtime['controller'] == 'profiles' && !empty($runtime['mode']) && $runtime['mode'] == 'update') { sd_YzE5ZWI5OWI1NDUzZmQ1Nzk0NjQ3MWI2($user_data); } } } function fn_sd_geolocation_login_user_post($user_id, $cu_id, $udata, $auth, $condition, $result) { if (AREA == 'C' && $user_id && $result == LOGIN_STATUS_OK) { sd_MDgyMWY5Zjk2N2U1NzZmZWI2OGZlZDlj($user_id); } } function sd_MWZjMGIzMmE2Y2UyYTA4Yjk2OWIxNWRl() { $array_crawler = array( 'Mozilla/4.0 (compatible;HostTracker/2.0;+http://www.host-tracker.com/)', 'Mozilla/5.0 (Linux; Android 6.0.1; Nexus 5X Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.96 Mobile Safari/537.36 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)' ); if (!defined('CRAWLER') && !empty($_SERVER['HTTP_USER_AGENT']) && !in_array($_SERVER['HTTP_USER_AGENT'], $array_crawler)) { return false; } return true; } 